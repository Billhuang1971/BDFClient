# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sign_info.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt


class Ui_diag_MainWindow(object):
    def setupUi(self, diag_MainWindow):
        try:
            screen = QtWidgets.QApplication.primaryScreen()
            self.dpi_scale = screen.logicalDotsPerInch() / 96.0  # 96 DPI 是标准值

            diag_MainWindow.setObjectName("diag_MainWindow")
            diag_MainWindow.resize(int(1080*self.dpi_scale), int(651*self.dpi_scale))

            #主容器与布局
            font = QtGui.QFont()
            font.setFamily("Arial")
            font.setPointSize(int(14*self.dpi_scale))

            self.centralwidget = QtWidgets.QWidget(diag_MainWindow)
            self.centralwidget.setObjectName("centralwidget")
            self.main_layout = QtWidgets.QVBoxLayout(self.centralwidget)
            self.main_layout.setContentsMargins(
                int(20 * self.dpi_scale), int(15 * self.dpi_scale),
                int(20 * self.dpi_scale), int(15 * self.dpi_scale)
            )
            self.main_layout.setSpacing(int(15 * self.dpi_scale))

            # ===== 顶部信息栏 =====
            top_layout = QtWidgets.QGridLayout()
            top_layout.setHorizontalSpacing(int(20 * self.dpi_scale))
            top_layout.setVerticalSpacing(int(10 * self.dpi_scale))

            # 第一行：病人信息
            self.label = self._create_label("label")
            self.patient_lineEdit = self._create_lineedit("patient_lineEdit",True)
            top_layout.addWidget(self.label, 0, 0)
            top_layout.addWidget(self.patient_lineEdit, 0, 1)

            # 第二行：测量日期
            self.label_2 = self._create_label("label_2")
            self.measure_date_lineEdit = self._create_lineedit("measure_date_lineEdit",True)
            top_layout.addWidget(self.label_2, 0, 2)
            top_layout.addWidget(self.measure_date_lineEdit, 0, 3)

            # 第三行：诊断医生
            self.label_3 = self._create_label("label_3")
            self.d_user_lineEdit_3 = self._create_lineedit("d_user_lineEdit_3",True)
            top_layout.addWidget(self.label_3, 0, 4)
            top_layout.addWidget(self.d_user_lineEdit_3, 0, 5)


            #有个self.label_state没有用，给删了

            # 诊断日期
            self.label_4 = self._create_label("label_4")
            self.label_4.setLayoutDirection(Qt.LeftToRight)
            self.sign_dateTimeEdit = QtWidgets.QDateTimeEdit()
            self.sign_dateTimeEdit.setFont(self._get_font())
            top_layout.addWidget(self.label_4, 0, 6)
            top_layout.addWidget(self.sign_dateTimeEdit, 0, 7)

            self.label_state = self._create_label("label_state")
            self.state_lineEdit_3 = self._create_lineedit("state_lineEdit_3",True)

            # 设置列拉伸比例
            for col in [1, 3, 5, 7]:
                top_layout.setColumnStretch(col, 1)

            # ===== 诊断信息输入区域 =====
            form_layout = QtWidgets.QGridLayout()
            form_layout.setHorizontalSpacing(int(15 * self.dpi_scale))
            form_layout.setVerticalSpacing(int(10 * self.dpi_scale))

            # 生成输入行
            fields = [
                ("α波活动", "alpha_lineEdit"),
                ("慢波活动", "slow_lineEdit"),
                ("快波活动", "fast_lineEdit"),
                ("波幅特点", "amplitude_lineEdit"),
                ("睁闭眼", "eyes_lineEdit"),
                ("过度换气", "hyperventilation_lineEdit"),
                ("睡眠", "sleep_lineEdit"),
                ("异常脑波", "abnormal_wave_lineEdit"),
                ("发作期", "attack_stage_lineEdit"),
                ("诊断总结", "summary_textEdit")
            ]

            for row, (label_text, editText) in enumerate(fields):
                # 动态生成标签后缀
                label_suffix = row + 5  # 例如从5开始
                label_name = f"label_{label_suffix}"
                # 使用 setattr 动态创建属性
                setattr(self, label_name, self._create_label(label_name))
                # 获取动态创建的标签并添加到布局
                label = getattr(self, label_name)  # 获取动态生成的标签
                if editText != "summary_textEdit":
                    line_edit = self._create_lineedit(editText)
                    setattr(self, editText, line_edit)
                else:
                    text_edit = self._create_textedit(editText)
                    setattr(self, editText, text_edit)
                widget = getattr(self, editText)
                form_layout.addWidget(label, row, 0)
                form_layout.addWidget(widget, row, 1)


            # 设置输入区域拉伸比例
            form_layout.setColumnStretch(1, 3)

            # ===== 底部按钮区域 =====
            button_layout = QtWidgets.QHBoxLayout()
            button_layout.addStretch()

            self.save_pushButton = self._create_button("保   存")
            self.commit_pushButton = self._create_button("完   成")
            self.close_pushButton = self._create_button("关   闭")

            button_layout.addWidget(self.save_pushButton)
            button_layout.addWidget(self.commit_pushButton)
            button_layout.addWidget(self.close_pushButton)

            # ===== 整合所有布局 =====
            self.main_layout.addLayout(top_layout)
            self.main_layout.addLayout(form_layout)
            self.main_layout.addStretch(1)
            self.main_layout.addLayout(button_layout)

            diag_MainWindow.setCentralWidget(self.centralwidget)
            self.retranslateUi(diag_MainWindow)
            QtCore.QMetaObject.connectSlotsByName(diag_MainWindow)


            diag_MainWindow.setCentralWidget(self.centralwidget)
            self.menubar = QtWidgets.QMenuBar(diag_MainWindow)
            self.menubar.setGeometry(QtCore.QRect(0, 0, 1080, 23))
            self.menubar.setObjectName("menubar")
            diag_MainWindow.setMenuBar(self.menubar)
            self.statusbar = QtWidgets.QStatusBar(diag_MainWindow)
            self.statusbar.setObjectName("statusbar")
            diag_MainWindow.setStatusBar(self.statusbar)




            self.retranslateUi(diag_MainWindow)
            QtCore.QMetaObject.connectSlotsByName(diag_MainWindow)
        except Exception as e:
            print(f'Error in {func.__name__}: {e}')

    def _get_font(self):
        """获取缩放后的字体"""
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSizeF(12 * self.dpi_scale)
        return font

    def _create_label(self, ObjectName):
        """创建标签"""
        label = QtWidgets.QLabel()
        label.setFont(self._get_font())
        label.setMinimumWidth(int(120 * self.dpi_scale))
        label.setObjectName(ObjectName)
        return label

    def _create_lineedit(self, ObjectName, readonly=False):
        """创建输入框"""
        lineedit = QtWidgets.QLineEdit()
        lineedit.setFont(self._get_font())
        lineedit.setMinimumHeight(int(35 * self.dpi_scale))
        lineedit.setReadOnly(readonly)
        lineedit.setObjectName(ObjectName)
        return lineedit

    def _create_textedit(self, ObjectName):
        """创建文本编辑框"""
        textedit = QtWidgets.QTextEdit()
        textedit.setFont(self._get_font())
        textedit.setMinimumHeight(int(100 * self.dpi_scale))
        return textedit

    def _create_button(self, text):
        """创建按钮"""
        button = QtWidgets.QPushButton()
        button.setFont(self._get_font())
        button.setMinimumSize(
            int(90 * self.dpi_scale),
            int(35 * self.dpi_scale)
        )
        button.setObjectName(text)
        return button

    def retranslateUi(self, diag_MainWindow):
        _translate = QtCore.QCoreApplication.translate
        diag_MainWindow.setWindowTitle(_translate("diag_MainWindow", "诊断信息"))
        self.label.setText(_translate("diag_MainWindow", "病人"))
        self.label_2.setText(_translate("diag_MainWindow", "测量日期:"))
        self.label_3.setText(_translate("diag_MainWindow", "诊断医生:"))
        self.label_state.setText(_translate("diag_MainWindow", "状态:"))
        self.label_state.hide()
        self.state_lineEdit_3.hide()
        self.label_4.setText(_translate("diag_MainWindow", "诊断日期:"))

        self.label_5.setText(_translate("diag_MainWindow", "α波活动"))
        self.label_6.setText(_translate("diag_MainWindow", "慢波活动"))
        self.label_7.setText(_translate("diag_MainWindow", "快波活动"))
        self.label_8.setText(_translate("diag_MainWindow", "波幅特点"))
        self.label_9.setText(_translate("diag_MainWindow", "睁闭眼"))
        self.label_10.setText(_translate("diag_MainWindow", "过度换气"))
        self.label_11.setText(_translate("diag_MainWindow", "睡眠"))
        self.label_12.setText(_translate("diag_MainWindow", "异常脑波"))
        self.label_13.setText(_translate("diag_MainWindow", "发作期"))
        self.label_14.setText(_translate("diag_MainWindow", "诊断总结"))

        self.save_pushButton.setText(_translate("diag_MainWindow", "保   存"))
        self.save_pushButton.setToolTip("保存当前诊断信息，下次可以修改.")
        self.close_pushButton.setText(_translate("diag_MainWindow", "关   闭"))
        self.commit_pushButton.setText(_translate("diag_MainWindow", "完   成"))
        self.commit_pushButton.setToolTip("保存当前诊断信息提交，完成诊断不再修改.")