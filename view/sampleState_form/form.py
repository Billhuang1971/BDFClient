# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.Qt import *


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1190, 822)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.verticalLayout.setStretch(0, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def init_view(self, getTypeDetail, setSelectedRow, search_by_source_type):
        try:
            self.tableWideget = QTableWidget()

            self.label_1 = QLabel('标注类型:')
            self.label_2 = QLabel('数据来源:')

            font = QFont()
            font.setPointSize(14)
            self.label_1.setFont(font)
            self.label_2.setFont(font)

            self.comboBox_2 = QComboBox()
            # self.comboBox_2.addItems(['手动标注', '自动标注', '评估标注'])
            self.comboBox_2.addItems(['诊断标注', '科研标注'])
            self.comboBox_2.setCurrentIndex(-1)
            font1 = QFont()
            font1.setPointSize(12)
            self.comboBox_2.setFont(font1)
            self.comboBox_2.setFixedHeight(25)
            self.spaceItem_1 = QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
            self.spaceItem_2 = QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
            self.spaceItem_3 = QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
            self.spaceItem_4 = QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)

            font.setFamily("Arial Black")
            font.setPointSize(14)
            # font.setBold(True)
            # font.setWeight(75)
            self.detail_btn = QPushButton('明细')
            self.detail_btn.setFont(QFont(font))
            # self.detail_btn.setStyleSheet("background-color: rgb(255, 0, 0);\n"
            #                               "color: rgb(255, 255, 255);")

            self.search_btn = QPushButton('搜索')
            self.search_btn.setFont(QFont(font))
            # self.search_btn.setStyleSheet("background-color: rgb(255, 0, 0);\n"
            #                               "color: rgb(255, 255, 255);")

            self.horizontalLayout.addWidget(self.detail_btn)
            self.horizontalLayout.addItem(self.spaceItem_2)

            self.horizontalLayout.addWidget(self.label_2)
            self.horizontalLayout.addWidget(self.comboBox_2)
            self.horizontalLayout.addItem(self.spaceItem_3)

            self.horizontalLayout.addWidget(self.label_1)
            self.horizontalLayout.addWidget(self.comboBox_1)
            self.horizontalLayout.addItem(self.spaceItem_1)

            self.horizontalLayout.addWidget(self.search_btn)
            self.horizontalLayout.addItem(self.spaceItem_4)

            self.horizontalLayout.setStretch(9, 7)

            self.verticalLayout.addWidget(self.tableWideget)
            self.verticalLayout.setStretch(1, 9)

            self.detail_btn.clicked.connect(getTypeDetail)
            self.tableWideget.itemClicked.connect(setSelectedRow)
            self.search_btn.clicked.connect(search_by_source_type)
            self.comboBox_2.activated.connect(self.clear_type_select)
        except Exception as e:
            print('init_view', e)

    # 选择数据来源时，将类型选择中已选择的清空
    def clear_type_select(self):
        self.comboBox_1.select_clear()
        self.init_table([])
        self.tableWideget.horizontalHeader().setVisible(False)

    # 初始化样本统计表
    def init_table(self, table):
        col_num = 2
        row_num = len(table)
        self.tableWideget.setRowCount(row_num)
        self.tableWideget.setColumnCount(col_num)
        self.edit_check = []
        # 设置表格高度
        for i in range(row_num):
            self.tableWideget.setRowHeight(i, 55)

        # 各列均分
        self.tableWideget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        # self.tableWideget.horizontalHeader().setSectionResizeMode(0, QHeaderView.ResizeToContents)

        # 设置列头
        col_label = ['标注类型', '数量']

        self.tableWideget.setHorizontalHeaderLabels(col_label)
        self.tableWideget.horizontalHeader().setStyleSheet(
            '''font: 20px;border:none;border-bottom:1px solid rgb(210, 210, 210)''')
        # 使表格填满整个widget
        self.tableWideget.horizontalHeader().setStretchLastSection(True)
        self.tableWideget.setEditTriggers(QAbstractItemView.NoEditTriggers)
        # print(user_info)
        for row in range(0, row_num):
            for col in range(0, col_num):
                if isinstance(table[row][col], int):
                    self.text_item = QTableWidgetItem(str(table[row][col]))
                else:
                    self.text_item = QTableWidgetItem(table[row][col])
                self.text_item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
                self.text_item.setFont(QFont('', 12))
                self.tableWideget.setItem(row, col, self.text_item)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
